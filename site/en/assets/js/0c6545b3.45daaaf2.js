"use strict";(self.webpackChunkfulgo_docs_docusaurus=self.webpackChunkfulgo_docs_docusaurus||[]).push([[391],{5680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>g});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach(function(n){a(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),u=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(o.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef(function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(t),m=a,g=p["".concat(o,".").concat(m)]||p[m]||d[m]||l;return t?r.createElement(g,i(i({ref:n},c),{},{components:t})):r.createElement(g,i({ref:n},c))});function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=m;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<l;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6725:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>s,metadata:()=>u,toc:()=>p});var r=t(8168),a=t(8587),l=(t(6540),t(5680)),i=["components"],s={id:"05-malls",title:"Malls"},o=void 0,u={unversionedId:"05-malls",id:"05-malls",title:"Malls",description:"Malls \u2014 Management",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/05-malls.md",sourceDirName:".",slug:"/05-malls",permalink:"/en/05-malls",draft:!1,editUrl:"https://github.com/losnah-think/fulgo-oms-fdd/edit/main/docusaurus/docs/05-malls.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"05-malls",title:"Malls"},sidebar:"tutorialSidebar",previous:{title:"Products Detail",permalink:"/en/04-products-detail"},next:{title:"Categories",permalink:"/en/06-categories"}},c={},p=[{value:"Malls \u2014 Management",id:"malls--management",level:2},{value:"Key actions",id:"key-actions",level:3},{value:"Displayed data",id:"displayed-data",level:3},{value:"Business rules / policies",id:"business-rules--policies",level:3},{value:"Permissions (temporary)",id:"permissions-temporary",level:3},{value:"Success metrics / KPI",id:"success-metrics--kpi",level:3},{value:"Error conditions and UX",id:"error-conditions-and-ux",level:3},{value:"Notes / integrations",id:"notes--integrations",level:3}],d={toc:p},m="wrapper";function g(e){var n=e.components,t=(0,a.A)(e,i);return(0,l.yg)(m,(0,r.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,l.yg)("h2",{id:"malls--management"},"Malls \u2014 Management"),(0,l.yg)("p",null,"Purpose: Configure and monitor connected malls (marketplaces) and their integrations."),(0,l.yg)("p",null,"Primary users:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Integration engineers"),(0,l.yg)("li",{parentName:"ul"},"Operations teams"),(0,l.yg)("li",{parentName:"ul"},"Platform administrators")),(0,l.yg)("h3",{id:"key-actions"},"Key actions"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Add/remove mall connections and configure credentials."),(0,l.yg)("li",{parentName:"ul"},"Configure per-mall mapping (categories, brands) and manage synchronization schedules."),(0,l.yg)("li",{parentName:"ul"},"Inspect sync status, last sync time, and error logs.")),(0,l.yg)("h3",{id:"displayed-data"},"Displayed data"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Mall name and identifier"),(0,l.yg)("li",{parentName:"ul"},"Connection status"),(0,l.yg)("li",{parentName:"ul"},"Last synchronization timestamp"),(0,l.yg)("li",{parentName:"ul"},"Mapping statistics (number of mapped categories/brands)")),(0,l.yg)("h3",{id:"business-rules--policies"},"Business rules / policies"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Mall credentials are stored encrypted and can only be accessed by users with ",(0,l.yg)("inlineCode",{parentName:"li"},"integrations:manage"),"."),(0,l.yg)("li",{parentName:"ul"},"When adding a mall, an initial mapping skeleton is generated; mappings should be finalized before large-scale sync jobs.")),(0,l.yg)("h3",{id:"permissions-temporary"},"Permissions (temporary)"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Read: ",(0,l.yg)("inlineCode",{parentName:"li"},"integrations:view")),(0,l.yg)("li",{parentName:"ul"},"Manage: ",(0,l.yg)("inlineCode",{parentName:"li"},"integrations:manage"))),(0,l.yg)("h3",{id:"success-metrics--kpi"},"Success metrics / KPI"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Target sync success rate: ",(0,l.yg)("strong",{parentName:"li"},"> 98%"))),(0,l.yg)("h3",{id:"error-conditions-and-ux"},"Error conditions and UX"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"When a token expires, show guidance and a reconnect flow to refresh credentials.")),(0,l.yg)("h3",{id:"notes--integrations"},"Notes / integrations"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Connectors (adapters) such as Cafe24 run as background jobs.")))}g.isMDXComponent=!0}}]);