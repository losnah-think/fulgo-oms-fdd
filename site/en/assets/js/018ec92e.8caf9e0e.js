"use strict";(self.webpackChunkfulgo_docs_docusaurus=self.webpackChunkfulgo_docs_docusaurus||[]).push([[408],{5002:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>y,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var a=r(8168),n=r(8587),l=(r(6540),r(5680)),i=["components"],s={id:"01-orders-list",title:"Orders List"},o="Orders \u2014 List",d={unversionedId:"01-orders-list",id:"01-orders-list",title:"Orders List",description:"Overview",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/01-orders-list.md",sourceDirName:".",slug:"/01-orders-list",permalink:"/en/01-orders-list",draft:!1,editUrl:"https://github.com/losnah-think/fulgo-oms-fdd/edit/main/docs/01-orders-list.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"01-orders-list",title:"Orders List"},sidebar:"tutorialSidebar",previous:{title:"FULGO OMS Functional Design Document",permalink:"/en/"},next:{title:"Orders Detail",permalink:"/en/02-orders-detail"}},u={},c=[{value:"Overview",id:"overview",level:2},{value:"Key features",id:"key-features",level:2},{value:"Data shown (examples)",id:"data-shown-examples",level:2},{value:"Implementation notes",id:"implementation-notes",level:2},{value:"title: Orders List",id:"title-orders-list",level:2},{value:"Overview",id:"overview-1",level:2},{value:"Key features",id:"key-features-1",level:2},{value:"Data shown (examples)",id:"data-shown-examples-1",level:2},{value:"Implementation notes",id:"implementation-notes-1",level:2},{value:"title: Orders List",id:"title-orders-list-1",level:2},{value:"Orders \u2014 List",id:"orders--list-2",level:2}],p={toc:c},m="wrapper";function y(e){var t=e.components,r=(0,n.A)(e,i);return(0,l.yg)(m,(0,a.A)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,l.yg)("h1",{id:"orders--list"},"Orders \u2014 List"),(0,l.yg)("h2",{id:"overview"},"Overview"),(0,l.yg)("p",null,"The Orders List provides a consolidated view of orders pulled from connected marketplaces. It supports searching, filtering, bulk actions, and per-order quick actions."),(0,l.yg)("h2",{id:"key-features"},"Key features"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Unified order feed with source marketplace and external order id."),(0,l.yg)("li",{parentName:"ul"},"Multi-criteria filters: status, date range, marketplace, store, payment method."),(0,l.yg)("li",{parentName:"ul"},"Quick actions: view details, sync status, cancel, create shipment, export."),(0,l.yg)("li",{parentName:"ul"},"Bulk operations: update status, print invoices, export CSV.")),(0,l.yg)("h2",{id:"data-shown-examples"},"Data shown (examples)"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Order ID (internal)"),(0,l.yg)("li",{parentName:"ul"},"External Order ID (marketplace)"),(0,l.yg)("li",{parentName:"ul"},"Marketplace / Mall"),(0,l.yg)("li",{parentName:"ul"},"Status (New, Confirmed, Packed, Shipped, Cancelled, Returned)"),(0,l.yg)("li",{parentName:"ul"},"Total amount, currency"),(0,l.yg)("li",{parentName:"ul"},"Customer name / contact"),(0,l.yg)("li",{parentName:"ul"},"Created / updated timestamps")),(0,l.yg)("h2",{id:"implementation-notes"},"Implementation notes"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Orders are read-through from marketplace webhooks and periodic syncs; UI should reflect last-sync timestamp and conflict indicators."),(0,l.yg)("li",{parentName:"ul"},"Actions that change order state must call the OMS backend API and log an audit record.")),(0,l.yg)("hr",null),(0,l.yg)("p",null,"id: 01-orders-list"),(0,l.yg)("h2",{id:"title-orders-list"},"title: Orders List"),(0,l.yg)("h1",{id:"orders--list-1"},"Orders \u2014 List"),(0,l.yg)("h2",{id:"overview-1"},"Overview"),(0,l.yg)("p",null,"The Orders List provides a consolidated view of orders pulled from connected marketplaces. It supports searching, filtering, bulk actions, and per-order quick actions."),(0,l.yg)("h2",{id:"key-features-1"},"Key features"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Unified order feed with source marketplace and external order id."),(0,l.yg)("li",{parentName:"ul"},"Multi-criteria filters: status, date range, marketplace, store, payment method."),(0,l.yg)("li",{parentName:"ul"},"Quick actions: view details, sync status, cancel, create shipment, export."),(0,l.yg)("li",{parentName:"ul"},"Bulk operations: update status, print invoices, export CSV.")),(0,l.yg)("h2",{id:"data-shown-examples-1"},"Data shown (examples)"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Order ID (internal)"),(0,l.yg)("li",{parentName:"ul"},"External Order ID (marketplace)"),(0,l.yg)("li",{parentName:"ul"},"Marketplace / Mall"),(0,l.yg)("li",{parentName:"ul"},"Status (New, Confirmed, Packed, Shipped, Cancelled, Returned)"),(0,l.yg)("li",{parentName:"ul"},"Total amount, currency"),(0,l.yg)("li",{parentName:"ul"},"Customer name / contact"),(0,l.yg)("li",{parentName:"ul"},"Created / updated timestamps")),(0,l.yg)("h2",{id:"implementation-notes-1"},"Implementation notes"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Orders are read-through from marketplace webhooks and periodic syncs; UI should reflect last-sync timestamp and conflict indicators."),(0,l.yg)("li",{parentName:"ul"},"Actions that change order state must call the OMS backend API and log an audit record.")),(0,l.yg)("hr",null),(0,l.yg)("p",null,"id: 01-orders-list"),(0,l.yg)("h2",{id:"title-orders-list-1"},"title: Orders List"),(0,l.yg)("h2",{id:"orders--list-2"},"Orders \u2014 List"),(0,l.yg)("p",null,"Purpose: Browse and manage orders across connected marketplaces."))}y.isMDXComponent=!0},5680:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>y});var a=r(6540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach(function(t){n(e,t,r[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))})}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=a.createContext({}),d=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=d(e.components);return a.createElement(o.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef(function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=d(r),m=n,y=c["".concat(o,".").concat(m)]||c[m]||p[m]||l;return r?a.createElement(y,i(i({ref:t},u),{},{components:r})):a.createElement(y,i({ref:t},u))});function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[c]="string"==typeof e?e:n,i[1]=s;for(var d=2;d<l;d++)i[d]=r[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);